on:
  push:
    branches: ["main"]
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-site:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup-env
        with:
          free_up_space: false

      - name: Bump pyopenssl and crypto
        run: |
          sudo apt remove python3-pip
          wget https://bootstrap.pypa.io/get-pip.py
          sudo python3 get-pip.py
          pip install -U pyopenssl cryptography

      - name: Get new data
        run: |
          pip install pygithub requests
          cd dashboard
          python getdata.py -token ${{ secrets.GITHUB_TOKEN }}

      - name: Build site
        run: |
          pip install pandas plotly
          cd dashboard
          python plot.py

      - name: Commit new data/site
        uses: EndBug/add-and-commit@v9
        with:
          message: 'CI: Update dashboard with latest runs'


  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-site]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dashboard/site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
