name: "Build with all checking"

# Performs builds with --enable-gcc-checking=all

on:
  workflow_call:
    inputs:
      mode:
        required: true
        type: string
      target:
        required: true
        type: string
      gcchash:
        required: true
        type: string
      multitarget:
        required: false
        type: string

jobs:
  check:
    runs-on: ubuntu-22.04
    environment: production
    steps:
      - name: Early exit
        if: ${{ inputs.multitarget != '' && !contains(inputs.multitarget, format('{0}:{1}', inputs.mode, inputs.target)) }}
        id: early-exit
        run: |
          export EARLY_EXIT="exit"
          echo "early_exit=$EARLY_EXIT" >> "$GITHUB_OUTPUT"

    outputs:
      early_exit: ${{ steps.early-exit.outputs.early_exit }}


  build-with-checking:
    runs-on: ubuntu-22.04
    environment: production
    # container: ubuntu:22.04 # This adds too much overhead and causes the builds to timeout
    defaults:
      run:
        working-directory: riscv-gnu-toolchain
    needs: [check]
    if: ${{ needs.check.outputs.early_exit != 'exit' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup env
        uses: ./.github/actions/common/setup-env
        with:
          free_up_space: true

      - name: Restore submodules from cache
        uses: actions/download-artifact@v4
        with:
          name: gcc-sources-${{ inputs.gcchash }}
          path: riscv-gnu-toolchain

      - name: Restore submodules
        run: |
          rm -rf .git binutils dejagnu gcc gdb glibc newlib qemu
          unzip cache.zip
          rm -rf cache.zip

      - name: Print gcc hash
        run: |
          cd gcc
          git rev-parse HEAD

      - name: Install dependencies
        run: sudo ./.github/setup-apt.sh

      - name: Configure
        run: |
          mkdir build
          cd build
          TARGET_TUPLE=($(echo ${{ inputs.target }} | tr "-" "\n"))
          ../configure --prefix=$(pwd) --with-arch=${TARGET_TUPLE[0]} --with-abi=${TARGET_TUPLE[1]} --enable-gcc-checking=all

      - name: Make gcc
        run: |
          cd build
          make -j $(nproc) ${{ inputs.mode }}  --output-sync=target

      - name: Remove sources to reclaim disk space
        run: |
          rm -rf .git binutils dejagnu gcc gdb glibc newlib qemu

      - name: Zip binaries
        run: |
          zip -r gcc-${{ inputs.mode }}-${{ inputs.target }}-${{ inputs.gcchash }}-${{ inputs.multilib }}-rtl-checking.zip build/bin

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: gcc-${{ inputs.mode }}-${{ inputs.target }}-${{ inputs.gcchash }}-${{ inputs.multilib }}-rtl-checking
          path: |
            riscv-gnu-toolchain/gcc-${{ inputs.mode }}-${{ inputs.target }}-${{ inputs.gcchash }}-${{ inputs.multilib }}-rtl-checking.zip
          retention-days: 5
