name: Staging

# Staging workflow
# Triggered on pull requests into staging branch
# Goal is to prevent making breaking changes to Run-Frequent workflows

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main
    inputs:
      gcchash:
        description: 'GCC Hash'
        required: false
      issue_num:
        description: 'Bisection Issue Number (Optional)'
        required: false
      prefix:
        required: false
        description: 'Prefix (Optional)'
        type: choice
        default: ""
        options:
          - ""
          - "binutils_"
          - "checking_"
          - "coord_"
          - "glibc_"
          - "release_14_"
          - "rv32_zvl_"
          - "rv64_zvl_"
          - "zve_"

jobs:
  manually-triggered-gcc-workflow-dispatch:
    uses: ./.github/workflows/run-frequent.yaml
    if: ${{ inputs.gcchash != '' }} # can be generalized later
    permissions:
      issues: write
    with:
      gcchash: ${{ inputs.gcchash }}
      issue_num: ${{ inputs.issue_num }}

  manually-triggered-binutils-workflow-dispatch:
    uses: ./.github/workflows/run-daily-rv-gc-binutils.yaml
    if: ${{ inputs.prefix == 'binutils_' }}
    permissions:
      issues: write

  manually-triggered-checking-workflow-dispatch:
    uses: ./.github/workflows/run-weekly-with-checking.yaml
    if: ${{ inputs.prefix == 'checking_' }}
    permissions:
      issues: write

  manually-triggered-coord-workflow-dispatch:
    uses: ./.github/workflows/run-frequent-coordination.yaml
    if: ${{ inputs.prefix == 'coord_' }}
    permissions:
      issues: write
    with:
      gcchash: ${{ inputs.gcchash }}
      issue_num: ${{ inputs.issue_num }}

  manually-triggered-glibc-workflow-dispatch:
    uses: ./.github/workflows/run-daily-rv-gc-glibc.yaml
    if: ${{ inputs.prefix == 'glibc_' }}
    permissions:
      issues: write

  manually-triggered-release-14-workflow-dispatch:
    uses: ./.github/workflows/run-frequent-14.yaml
    if: ${{ inputs.prefix == 'release_14_' }}
    permissions:
      issues: write
    with:
      gcchash: ${{ inputs.gcchash }}
      issue_num: ${{ inputs.issue_num }}

  manually-triggered-rv32-zvl-workflow-dispatch:
    uses: ./.github/workflows/run-weekly-rv32gcv-zvl.yaml
    if: ${{ inputs.prefix == 'rv32_zvl_' }}
    permissions:
      issues: write

  manually-triggered-rv64-zvl-workflow-dispatch:
    uses: ./.github/workflows/run-weekly-rv64gcv-zvl.yaml
    if: ${{ inputs.prefix == 'rv64_zvl_' }}
    permissions:
      issues: write

  manually-triggered-zve-workflow-dispatch:
    uses: ./.github/workflows/run-weekly-gcv-zve.yaml
    if: ${{ inputs.prefix == 'zve_' }}
    permissions:
      issues: write

  get-hash:
    runs-on: ubuntu-20.04
    environment: production
    if: ${{ inputs.gcchash == '' && inputs.prefix == '' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup env
        uses: ./.github/actions/common/setup-env
        with:
          free_up_space: false

      - name: Bump pyopenssl and crypto
        run: |
          sudo apt remove python3-pip
          wget https://bootstrap.pypa.io/get-pip.py
          sudo python3 get-pip.py
          pip install -U pyopenssl cryptography requests

      - name: Get staging hash to run
        id: baseline-hash
        run: |
          cd riscv-gnu-toolchain
          python ./scripts/get_staging_hash.py -token ${{ secrets.GITHUB_TOKEN }} -repo patrick-rivos/gcc-postcommit-ci
          BASELINE_HASH=$(cat issue_hash.txt)
          echo "baseline_hash=$BASELINE_HASH" >> $GITHUB_OUTPUT

      - name: Get issue number
        id: issue-num
        run: |
          cd riscv-gnu-toolchain
          ISSUE_NUM=$(cat issue_number.txt)
          echo "issue_num=$ISSUE_NUM" >> $GITHUB_OUTPUT

    outputs:
      baseline_hash: ${{ steps.baseline-hash.outputs.baseline_hash }}
      issue_num: ${{ steps.issue-num.outputs.issue_num }}

  run-workflow:
    needs: [get-hash]
    uses: ./.github/workflows/run-frequent.yaml
    if: ${{ inputs.gcchash == '' && inputs.prefix == '' }}
    permissions:
      issues: write
    secrets: inherit
    with:
      gcchash: ${{ needs.get-hash.outputs.baseline_hash }}
      issue_num: ${{ needs.get-hash.outputs.issue_num }}
